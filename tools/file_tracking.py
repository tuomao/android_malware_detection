# coding: utf-8
import argparse

import sys

__author__ = 'tuomao'
import os
from model import db_tool
import multiprocessing
import torndb
from model import dbsetting
FILES=[]

dbtool=db_tool.DbTool(torndb.Connection(**dbsetting.DATABASE['mysql']))

def tracking_file_from_dir(dir,is_malware):
     global FILES
     for root, dirs, files in os.walk(dir):
        for name in files:
            file_path=os.path.join(root,name)
            if file_path.endswith('.apk'):
                FILES.append( "(\'%s\',%d)"%(file_path,is_malware))


def track_file(file):
    dbtool.tracking_file(file)

if __name__=='__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument("-M", "--malware_path", default='/home/tuomao/Desktop/malware/',
                        help="malware path")
    parser.add_argument("-B", "--begin_path", default='/home/tuomao/Desktop/begin/',
                        help="bengin android software path")
    args=parser.parse_args()
    print dbtool.get_permissions()
    tracking_file_from_dir(args.malware_path,1)
    tracking_file_from_dir(args.begin_path,0)
    pool=multiprocessing.Pool(processes=20)

    for item in FILES:
        try:
            pool.apply(track_file,(item,))
        except:
            etype, evalue, tracebackObj = sys.exc_info()[:3]
            print ('apk:%s errortype:%s errorvalue:%s'%(item,etype,evalue))
    pool.close()
    pool.join()
    print 'finish'