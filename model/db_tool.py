# coding: utf-8
import torndb

__author__ = 'tuomao'
from model import dbsetting

NONE_LIST_RETURN=[]
NONE_DICT_RETURN={}

class DbTool(object):
    def __init__(self,con):
        self.db=con

    def get_permissions(self):
        query='select * from permission'
        result=self.db.query(query)
        if result:
            return result
        return NONE_LIST_RETURN

    def get_apk_attribute_rate(self,attr,value,count):
        '''
        :param attr:
        :param value:
        :param count:
        :return:
        '''
        f_count_query='select count(package) FROM apk_permission WHERE %s=%d'%(attr,value)
        f_count=self.db.query(f_count_query)
        return f_count/count

    def tracking_file(self,file):

        sql="insert into files(path,is_malware) values %s"%(file)
        print(sql)
        self.db.insert(sql)

    def get_un_tracking_files(self,files):
        get_tacking_file_sql='select path from files'

        def _filter_f(item):
            for f in tacking_files:
                if item[0]==f['path'].encode('utf-8'):
                    return True
            return False
        
        tacking_files=self.db.query(get_tacking_file_sql)
        un_tracking_files=[file for file in files if not _filter_f(file)]
        return un_tracking_files


